{
  "compilerOptions": {

    "skipDefaultLibCheck": true,
    "skipLibCheck": true,

    "forceConsistentCasingInFileNames": true,
    "traceResolution": false,

    "outDir": "./docs",                    // Redirect output structure to the directory.

    /* Basic Options */
    "target": "es2019",                       /* Specify ECMAScript target version: 'es3' (default), 'es5', 'es2015', 'es2016', 'es2017','es2018' or 'esnext'. */
    "module": "commonjs",                     // Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'esnext'.

    "allowJs": false,                     // Allow javascript files to be compiled.

    "diagnostics": true,
    "newLine": "LF",

    "removeComments": true, /* Do not emit comments to output. */
    "noEmit": false, /* Do not emit outputs. */
    /**
    * Often in Node.js applications a .json is needed.
    * With TypeScript 2.9, --resolveJsonModule allows for importing, extracting types from and generating .json files.
    */
    "resolveJsonModule": false,

    /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    "isolatedModules": false,

    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */

    /* Additional Checks */
    "noUnusedLocals": true, /* Report errors on unused locals. */
    "noUnusedParameters": true, /* Report errors on unused parameters. */
    "noImplicitReturns": true, /* Report error when not all code paths in function return a value. */

    /* Module Resolution Options */
    "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */

    /* Source Map Options */
    // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

    "typeRoots": [
    ],
    // List of root folders whose combined content represents the structure of the project at runtime.
    "rootDirs": [
      "./src"
    ]
  }
}
