@charset "utf-8";
div.app {
    width: 100vw;
    height: 100vh;
    overflow: visible !important;
}
div, p, span, body, li, header, text, table, th, td
{
    $DURATION: 180ms;
    --transition-list: background-color #{$DURATION} ease 0s, color #{$DURATION} ease 0s;
    transition: var(--transition-list);
}
.notice-sentence {
    font-family: consolas, "Segoe UI";
    font-size: 11.5px;
    white-space: pre-wrap;
    padding: 3px 6px 12px;
    border: solid 1px rgba(192, 192, 192, 0.44);
    border-bottom: none;
    border-right: none;
}
$SISI_BG: rgba(255, 31, 31, 0.81);
.datasource-indicator {
    position: fixed;
    top: 0;
    width: 100vw;
    height: 2px;
    z-index: $Z_BelowDrawer;
    &[data-datasource="singularity"] {
        background-color: $SISI_BG;
        & ~ .app .sde-version {
            background-color: $SISI_BG;
            color: black;
        }
    }
}
.sde-version {
    --transition-list: background-color 1500ms ease 0s;
    position: absolute;
    font-weight: 500;
    box-sizing: border-box;
    top: 10px; right: 10px;
    width: auto;
    margin: 0;
    outline: none;
    border: none;
    border-radius: 4px;
    padding: 1px 6px;
    line-height: 16px;
    background-color: rgba(55, 114, 167, 0.76);
    color: #cecece;
    z-index: $Z_BelowMuiDialog;
    cursor: pointer;
    &[data-enablecurtain] {
        &::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 10px;
            height: 10px;
            background-color: transparent;
            border-radius: 50%;
            filter: blur(0px);
            transition: background-color 400ms ease, top 400ms ease, left 400ms ease, filter 400ms ease;
        }
    }
    &[data-enablecurtain="1"] {
        &::before {
            top: 4px;
            left: -13px;
            background-color: rgba(40, 255, 67, 0.73);
            filter: blur(1.3px);
        }
    }
}
.app-right-container {
    position: relative;
    margin: 0;
    padding: 0px;
    transition:
        var(--transition-list),
        margin-left $PUSH-TRANSITION cubic-bezier(0, 0, 0.2, 1) 0ms,
        opacity 300ms ease 0s;
    opacity: 1;
    &.push {
        margin-left: $PUSH_LEFT;
        @include media-narrow-size() {
            margin-left: $PUSH_LEFT_SMALL;
        }
    }
    &.hide {
        opacity: 0;
    }
}
%li-selected {
    background-color: rgba(29, 162, 236, 0.28);
}
.MuiListItem-root.Mui-selected {
    @extend %li-selected;
}
.drawer-child {
    width: $PUSH_LEFT;
    @include media-narrow-size() {
        width: $PUSH_LEFT_SMALL;
    }
    $EASE: cubic-bezier(0, 0, 0.2, 1);
    background: transparent;
    transition: transform 225ms #{$EASE}, width 225ms #{$EASE}, var(--transition-list) !important;
    .list-items {
        padding: 0 3px;
        .list-item {
            $PAD: 6px;
            padding-top: $PAD;
            padding-bottom: $PAD;
            margin: 1px 0;
            border-radius: 6px;
            transition: none;
            $HAS-AVATOR: 2px;
            &.has-avatar {
                padding-top: $HAS-AVATOR;
                padding-bottom: $HAS-AVATOR;
            }
            &.has-avatar, &.has-icon {
                padding-left: 12px;
                padding-right: 12px;
            }
            &.has-icon img {
                margin: 0 !important;
            }
            &.selected {
                @extend %li-selected;
            }
        }
    }
}
.swing-icon {
    transform-style: flat;
    animation: swing 2400ms ease infinite normal;
    @include shadowed-circle(rgba(11, 191, 255, 0.74));
}
:root {
    --esi-request-interval: 120s;
}
.task-running-icon {
    z-index: 1;
    will-change: unset;
    transform-style: flat;
    animation: rolling-icon calc(var(--esi-request-interval) / 10) cubic-bezier(0.63, 0.18, 0.32, 0.82) infinite normal;
    @include shadowed-circle(rgba(9, 218, 71, 0.85));
}
@mixin needle-shape($width, $height, $radius) {
    position: absolute;
    box-sizing: border-box;
    top: 50%; left: 50%;
    width: 0; height: 0;
    border-style: solid;
    border-color: transparent;
    border-width: calc(#{$width} / 2);
    border-top-width: $height;
    border-bottom-width: calc(#{$radius} - #{$height});
}
.task-running-hand {
    z-index: 2;
    @include needle-shape(6px, 6px, 18px);
    $translate: translate(-50%, -100%);
    transform-origin: left top;
    transform: rotate(0deg) $translate;
    transform-style: flat;
    animation: tick var(--esi-request-interval) infinite linear;
    @keyframes tick {
        from {
            transform: rotate(0deg) $translate;
            opacity: 0.65;
            filter: blur(0.38px);
            border-top-color: #00e200;
        }
        50% {
            border-top-color: #FFBF00;
        }
        to {
            transform: rotate(360deg) $translate;
            opacity: 1;
            filter: blur(0.13px);
            border-top-color: red;
        }
    }
}
div.app[data-theme="light"] {
    .sde-version {
        background: rgba(80, 153, 220, 0.76);
        color: #fbfbfb;
    }
    .notice-sentence code {
        background-color: rgba(27, 31, 35, 0.05);
    }
    $SPREAD-DIM: 0px 0px 5px 1px;
    img.swing-icon {
        box-shadow: #{$SPREAD-DIM} rgba(11, 191, 255, 0.74);
    }
    img.task-running-icon {
        box-shadow: #{$SPREAD-DIM} rgba(9, 218, 22, 0.69);
    }
}